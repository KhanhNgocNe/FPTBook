@model FPTBook.Models.User
@{
    ViewBag.Title = "EditInfor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<body>
    <!-- Start: Pretty Registration Form -->
    @using (Html.BeginForm("EditInfor", "Users", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <form>
            <div class="row register-form" style="background: var(--bs-yellow);">
                <div class="col-md-8 offset-md-2 custom-form" style="background-color: white">
                    <h2 class="text-center">Account</h2>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column"><label class="col-form-label" for="name-input-field"> User Name </label></div>
                        <div class="col-sm-6 input-column">
                            <input class="form-control" type="text"
                                   @Html.EditorFor(model => model.username)
                                   @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column"><label class="col-form-label" for="name-input-field">Name </label></div>
                        <div class="col-sm-6 input-column">
                            <input class="form-control" type="text"
                                   @Html.EditorFor(model => model.fullname)
                                   @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column"><label class="col-form-label" for="email-input-field">Email </label></div>
                        <div class="col-sm-6 input-column">
                            <input class="form-control" type="email"
                                   @Html.EditorFor(model => model.email)
                                   @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column"><label class="col-form-label" for="pawssword-input-field">Password </label></div>
                        <div class="col-sm-6 input-column">
                            <input class="form-control" type="password"
                                   @Html.EditorFor(model => model.password)
                                   @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column"><label class="col-form-label" for="repeat-pawssword-input-field">Confirm Password </label></div>
                        <div class="col-sm-6 input-column">
                            <input class="form-control" type="password"
                                   @Html.EditorFor(model => model.confirmPassword)
                                   @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column"><label class="col-form-label">Address</label></div>
                        <div class="col-sm-6 input-column">
                            <input class="form-control"
                                   @Html.EditorFor(model => model.address)
                                   @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column"><label class="col-form-label">Telephone</label></div>
                        <div class="col-sm-6 input-column">
                            <input class="form-control"
                                   @Html.EditorFor(model => model.telephone)
                                   @Html.ValidationMessageFor(model => model.telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column"><label class="col-form-label">Birthday</label></div>
                        <div class="col-sm-6 input-column">
                            <input class="form-control" type="date"
                                   @Html.EditorFor(model => model.birthday)
                                   @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-4 label-column">
                            <label class="col-form-label" for="dropdown-input-field">Gender</label>
                        </div>
                        <div class="col-sm-3 col-form-label">
                            @Html.RadioButtonFor(model => model.gender, "Male")<span>Male</span>
                        </div>
                        <div class="col-sm-3 col-form-label">
                            @Html.RadioButtonFor(model => model.gender, "FeMale")<span>Female</span>
                        </div>
                        @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="row col-md-8 offset-md-2">

                        <button class="btn btn-light submit-button" type="submit" style="background: var(--bs-gray-900);">Save</button>
                        <button class="btn btn-light submit-button" type="button" style="background: var(--bs-gray-900);">Cancel</button>
                    </div>
                </div>
            </div>
        </form>
    }
    <!-- End: Pretty Registration Form -->
    <script src="~/assets/bootstrap/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/baguettebox.js/1.10.0/baguetteBox.min.js"></script>
    <script src="~/assets/js/vanilla-zoom.js"></script>
    <script src="~/assets/js/theme.js"></script>
    <script src="https://geodata.solutions/includes/countrystate.js"></script>
</body>
